/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import br.com.lpoo.projetolpooe1_luana.dao.PersistenciaJPA;
import br.com.lpoo.projetolpooe1_luana.model.Funcionarios;
import br.com.lpoo.projetolpooe1_luana.model.Pessoas;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author luana
 */
public class TelaFuncionario extends javax.swing.JFrame {

    /**
     * Creates new form TelaFuncionario
     */
    private PersistenciaJPA jpa;

    public TelaFuncionario() {
        initComponents();
        jpa = new PersistenciaJPA();
        listarFuncionarios();
    }

    private void listarFuncionarios() {
        JLFuncionario.clearSelection();
        jpa.conexaoAberta();
        List<Funcionarios> funcionarios = jpa.getFuncionarios();
        DefaultListModel<Funcionarios> mod = new DefaultListModel<>();
        for (Funcionarios f : funcionarios) {
            mod.addElement(f);
        }
        JLFuncionario.setModel(mod);
        jpa.fecharConexao();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JLFuncionario = new javax.swing.JList<>();
        BTAdicionar = new javax.swing.JButton();
        BTEditar = new javax.swing.JButton();
        BTRemover = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Lista de funcionarios");

        jLabel1.setText("Funcionarios");

        jScrollPane1.setViewportView(JLFuncionario);

        BTAdicionar.setText("Adicionar");
        BTAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTAdicionarActionPerformed(evt);
            }
        });

        BTEditar.setText("Editar");
        BTEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTEditarActionPerformed(evt);
            }
        });

        BTRemover.setText("Remover");
        BTRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTRemoverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(BTAdicionar)
                                .addGap(47, 47, 47)
                                .addComponent(BTEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(BTRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BTAdicionar)
                    .addComponent(BTEditar)
                    .addComponent(BTRemover))
                .addGap(23, 23, 23))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BTEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTEditarActionPerformed
        Funcionarios funcionarioSelecionado
                = JLFuncionario.getSelectedValue();
        if (funcionarioSelecionado != null) {

            try {

                jpa.conexaoAberta();

                Funcionarios funcionarioPersistido = (Funcionarios) jpa.find(Funcionarios.class, funcionarioSelecionado.getId());
                funcionarioPersistido.setNome(JOptionPane.showInputDialog(rootPane, "Informe o novo nome do funcionario: ", funcionarioSelecionado.getNome()));
                jpa.persist(funcionarioPersistido);
                jpa.fecharConexao();
                listarFuncionarios();

            } catch (Exception e) {
                System.err.println("Erro ao editar funcionario: " + e.getMessage());
            } finally {
                jpa.fecharConexao();
            }

        }
    }//GEN-LAST:event_BTEditarActionPerformed

    private void BTAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTAdicionarActionPerformed
      
        Funcionarios f = new Funcionarios();


        String nome = JOptionPane.showInputDialog("Informe o nome do funcionario:");
        if (nome == null || nome.trim().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Nome não pode ser vazio");
            return; 
        }
        f.setNome(nome);


        String endereco = JOptionPane.showInputDialog("Informe o endereço do funcionario:");
        if (endereco == null || endereco.trim().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Endereço não pode ser vazio");
            return; 
        }
        f.setEndereco(endereco);

        String data_nasc = JOptionPane.showInputDialog("Informe a data de nascimento do funcionario:");
        if (data_nasc == null || data_nasc.trim().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Data de nascimento não pode ser vazia");
            return; 
        }
        f.setData_nasc(data_nasc);

        String salarioStr = JOptionPane.showInputDialog("Informe o salário do funcionario:");
        int salario;
        try {
            salario = Integer.parseInt(salarioStr);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Salário deve ser um número válido");
            return; 
        }
        f.setSalario(salario);


        jpa.conexaoAberta();
        jpa.persist(f);
        jpa.fecharConexao();


        JOptionPane.showMessageDialog(rootPane, "Funcionário adicionado");

        listarFuncionarios();


    }//GEN-LAST:event_BTAdicionarActionPerformed

    private void BTRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTRemoverActionPerformed
       Funcionarios funcionarioSelecionado = JLFuncionario.getSelectedValue();

if (funcionarioSelecionado != null) {
   
    
    // Verifica se o funcionário está associado a um departamento
    boolean estaAssociado = jpa.existeAssociacaoFuncionario(funcionarioSelecionado);
    
    if (estaAssociado) {
        JOptionPane.showMessageDialog(rootPane,
                "O funcionário não pode ser removido porque está associado a um departamento.");
        return; // Interrompe a execução do método
    }
    
    // Solicita confirmação do usuário para remover o funcionário
    int confirmacaoDel = JOptionPane.showConfirmDialog(rootPane,
            "Tem certeza que deseja remover o funcionário " + funcionarioSelecionado.getNome() + "?");
    
    if (confirmacaoDel == JOptionPane.YES_OPTION) {
        try {
            jpa.conexaoAberta();
            jpa.remover(funcionarioSelecionado);
            jpa.fecharConexao();
            listarFuncionarios();
        } catch (Exception e) {
            System.err.println("Erro ao excluir funcionário: " + e.getMessage());
        } finally {
            jpa.fecharConexao();
        }
    }
} else {
    JOptionPane.showMessageDialog(rootPane,
            "Nenhum funcionário selecionado");
}

    }//GEN-LAST:event_BTRemoverActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaFuncionario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTAdicionar;
    private javax.swing.JButton BTEditar;
    private javax.swing.JButton BTRemover;
    private javax.swing.JList<Funcionarios> JLFuncionario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
